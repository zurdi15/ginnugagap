- name: Setup docker
  hosts: "{{ host | default('ginnugagap') }}"
  tasks:

  # Get variables

  - name: Get user
    ansible.builtin.shell: whoami
    register: whoami

  # Update packages

  - name: Update packages
    become: true
    become_method: sudo
    ansible.builtin.apt:
      update_cache: yes

  - name: Install docker dependencies
    become: true
    become_method: sudo
    ansible.builtin.apt:
      pkg:
      - libffi-dev
      - libssl-dev
      - python3-pip
      - python3-dev
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      state: latest

  - name: Enable docker official repository
    ansible.builtin.shell: |
      curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
  - name: Update packages
    become: true
    become_method: sudo
    ansible.builtin.apt:
      update_cache: yes

  - name: Install docker packages
    become: true
    become_method: sudo
    ansible.builtin.apt:
      pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: Install docker-compose
    become: true
    become_method: sudo
    ansible.builtin.pip:
      name: docker-compose

  - name: Add user to docker group
    become: true
    become_method: sudo
    ansible.builtin.shell: "usermod -aG docker {{ whoami.stdout }}"

  - name: Enable docker service
    ansible.builtin.systemd:
      name: docker
      enabled: yes

  - name: Autoremove OS packages
    become: true
    become_method: sudo
    ansible.builtin.apt:
      autoremove: yes